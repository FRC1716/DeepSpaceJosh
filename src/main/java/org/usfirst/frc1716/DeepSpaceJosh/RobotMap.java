// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1716.DeepSpaceJosh;

import edu.wpi.first.wpilibj.ADXRS450_Gyro;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Spark;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    public static Compressor compressor;
    public static ADXRS450_Gyro gyro;

    public static WPI_VictorSPX armSubsystemintakeSC;
    public static WPI_VictorSPX armSubsystemarmSC;
    public static DigitalInput armSubsystemlimitSwitchBottom;
    public static DigitalInput armSubsystemlimitSwitchTop;
    public static DoubleSolenoid armSubsystembrakeSolenoid;

    public static SpeedController driveSubsystemlfSC;
    public static SpeedController driveSubsystemlbSC;
    public static SpeedController driveSubsystemrfSC;
    public static SpeedController driveSubsystemrbSC;
    public static SpeedControllerGroup driveSubsystemleftSCG;
    public static SpeedControllerGroup driveSubsystemrightSCG;
    public static DifferentialDrive driveSubsystemdifferentialDrive;

    public static SpeedController intakeSubsystemrollerLeftSC;
    public static SpeedController intakeSubsystemrollerRightSC;
    public static DigitalInput intakeSubsystemlimitSwitch;
    public static DoubleSolenoid intakeSubsystemhatchSolenoid;
	
    public static void init() {
        compressor = new Compressor();
        gyro = new ADXRS450_Gyro();

        armSubsystemintakeSC = new WPI_VictorSPX(0);
        armSubsystemarmSC = new WPI_VictorSPX(1);
        armSubsystemlimitSwitchBottom = new DigitalInput(0);
        armSubsystemlimitSwitchTop = new DigitalInput(1);
        armSubsystembrakeSolenoid = new DoubleSolenoid(0, 2, 3);

        driveSubsystemlfSC = new Spark(3);
        driveSubsystemlbSC = new Spark(4);
        driveSubsystemrfSC = new Spark(1);
        driveSubsystemrbSC = new Spark(2);
        driveSubsystemleftSCG = new SpeedControllerGroup(driveSubsystemlfSC, driveSubsystemlbSC);
        driveSubsystemrightSCG = new SpeedControllerGroup(driveSubsystemrfSC, driveSubsystemrbSC);
        driveSubsystemdifferentialDrive = new DifferentialDrive(driveSubsystemleftSCG, driveSubsystemrightSCG);

        intakeSubsystemrollerLeftSC = new Spark(7);
        intakeSubsystemrollerRightSC = new Spark(8);
        intakeSubsystemlimitSwitch = new DigitalInput(2);
        intakeSubsystemhatchSolenoid = new DoubleSolenoid(0, 0, 1);
    }
}
